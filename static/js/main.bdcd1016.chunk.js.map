{"version":3,"sources":["components/tools/tools.module.css","components/app-header/app-header.module.css","components/todo-list/todo-list.module.css","components/app/app.module.css","components/app-header/app.header.tsx","actions/actions.tsx","components/add-todo/add-todo.tsx","components/todo-list-item/todo-list-item.tsx","components/todo-list/todo-list.tsx","components/tools/button-set/button-set.tsx","components/tools/tools.tsx","components/app/app.tsx","reducer.tsx","stote.tsx","index.tsx","components/tools/button-set/button-set.module.css","components/todo-list-item/todo-list-item.module.css","components/add-todo/add-todo.module.css"],"names":["module","exports","AppHeader","className","styles","title","onFilterAC","filter","type","AddTodo","useState","name","setName","description","setDescription","disabled","setDisabled","useEffect","id","useSelector","state","dispatch","useDispatch","onSubmit","onAddAC","container","onKeyPress","e","key","todo","placeholder","onChange","target","value","preventDefault","button","onClick","TodoListItem","item","done","todoClassName","text","descriptionText","useRef","showMore","setShowMore","onMore","c","cloneNode","style","display","width","visibility","document","body","appendChild","truncated","offsetWidth","clientWidth","remove","isTruncated","current","whiteSpace","marginBottom","getBoundingClientRect","height","ref","content","checkbox","onToggleAC","onToggle","delete","onDeleteAC","onDelete","TodoList","todoList","search","searchTerm","todos","toLowerCase","includes","map","ButtonSet","allClassName","doneClassName","pressed","Tools","App","tools","length","initialState","onAdd","newId","newTodoList","undefined","idx","findIndex","slice","newTodoListItem","onToggleAll","toggle","onSearch","onFilter","persistedState","localStorage","getItem","JSON","parse","store","createStore","action","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdcd1016.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tools_container__17ALD\",\"button\":\"tools_button__1-XFq\",\"search\":\"tools_search__30dj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app-header_title__2aMK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todo-list_container__3pRqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2GidD\"};","import styles from './app-header.module.css';\n\nexport const AppHeader = () => {\n    return (\n        <h1 className={styles.title}>TODO list</h1>\n    )\n}","const onDeleteAC = (id: number) => {\n    return {\n        type: 'ON_DELETE',\n        id: id\n    } as const;\n};\n\nconst onAddAC = (id: number, name: string, description: string) => {\n    return {\n        type: 'ON_ADD',\n        id: id,\n        name: name,\n        description: description\n    } as const;\n};\n\nconst onToggleAC = (id: number) => {\n    return {\n        type: 'ON_CHANGE',\n        id: id\n    } as const;\n};\n\nconst onToggleAllAC = () => {\n    return {\n        type: 'ON_TOGGLE'\n    } as const;\n};\n\nconst onSearchAC = (search: string) => {\n    return {\n        type: 'ON_SEARCH',\n        search: search\n    } as const;\n};\n\nconst onFilterAC = (filter: string) => {\n    return {\n        type: 'ON_FILTER',\n        filter: filter\n    } as const;\n};\n\nexport {\n    onAddAC,\n    onDeleteAC,\n    onToggleAllAC,\n    onToggleAC,\n    onSearchAC,\n    onFilterAC,\n}","import { ChangeEvent, Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onAddAC } from '../../actions/actions';\nimport { StateType } from '../../types';\nimport styles from './add-todo.module.css';\n\nexport const AddTodo = () => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    \n    const [disabled, setDisabled] = useState(true);\n\n    useEffect(() => {\n        if (name !== '') setDisabled(false);\n\n        return () => {\n            setDisabled(true);\n        };\n    }, [name])\n    const id = useSelector((state:StateType) => state.id);\n\n    const dispatch = useDispatch();\n\n    const onSubmit = () => {\n        if (name !== '') {\n            dispatch(onAddAC(id, name, description));\n            setName('');\n            setDescription('');\n        }\n\n        setDisabled(true);\n    };\n\n    return (\n        <Fragment>\n        <div\n            className={styles.container}\n            onKeyPress={(e) => {\n                if (e.key === 'Enter') onSubmit();\n            }} >\n            <input\n                className={styles.todo}\n                placeholder='TODO'\n                onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n                value={name} />\n            <textarea\n                className={styles.description}\n                placeholder='Description'\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') e.preventDefault();\n                }}\n                onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setDescription(e.target.value)}\n                value={description} />\n            <button\n                className={styles.button}\n                disabled={disabled}\n                onClick={onSubmit} >\n                add\n            </button>\n        </div>\n        </Fragment>\n    )\n};","import { MouseEvent, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { onDeleteAC, onToggleAC } from \"../../actions/actions\";\nimport { ItemType } from \"../../types\";\nimport styles from './todo-list-item.module.css';\n\ntype TodoListItemPropsTypes = {\n    item: ItemType\n}\n\nexport const TodoListItem = ({ item }: TodoListItemPropsTypes) => {\n\n    const dispatch = useDispatch();\n\n    const onDelete = (id: number) => {\n        dispatch(onDeleteAC(id));\n    };\n\n    const onToggle = (id: number) => {\n        dispatch(onToggleAC(id));\n    };\n\n    const { id, name, description, done } = item;\n\n    let todoClassName = styles.text;\n\n    if (done) todoClassName += ` ${styles.done}`;\n\n    const descriptionText = useRef<HTMLParagraphElement>(null);\n    const container = useRef<HTMLDivElement>(null);\n\n    const [showMore, setShowMore] = useState<boolean>(false);\n\n    const onMore = (e: MouseEvent<HTMLParagraphElement>) => {\n        e.preventDefault();\n\n        if (\n            isTruncated(e.target)\n            && !showMore\n            && descriptionText.current\n            && container.current\n        ) {\n            setShowMore(true);\n            descriptionText.current.style.whiteSpace = 'normal';\n            container.current.style.marginBottom = descriptionText.current.getBoundingClientRect().height + 'px';\n        } else if (\n            descriptionText.current\n            && container.current\n        ) {\n            setShowMore(false);\n            descriptionText.current.style.whiteSpace = 'nowrap';\n            container.current.style.marginBottom = 10 + 'px';\n        }\n    };\n\n    return (\n        <div\n            className={styles.container}\n            ref={container}>\n            <label className={styles.content} >\n                <input\n                    className={styles.checkbox}\n                    onClick={() => onToggle(id)}\n                    type='checkbox' />\n                <p className={todoClassName} >\n                    {name}\n                </p>\n                <p\n                    className={styles.description}\n                    ref={descriptionText}\n                    onClick={(e) => onMore(e)} >\n                    {description}\n                </p>\n            </label>\n            <button\n                className={styles.delete}\n                onClick={() => onDelete(id)} >\n                &times;\n            </button>\n        </div>\n    );\n};\n\nfunction isTruncated(e: any) {\n    var c = e.cloneNode(true);\n    c.style.display = 'inline';\n    c.style.width = 'auto';\n    c.style.visibility = 'hidden';\n    document.body.appendChild(c);\n    const truncated = c.offsetWidth >= e.clientWidth;\n    c.remove();\n    return truncated;\n}","import { useSelector } from \"react-redux\";\nimport { ItemType, StateType } from \"../../types\";\nimport { TodoListItem } from \"../todo-list-item/todo-list-item\";\nimport styles from './todo-list.module.css';\n\nexport const TodoList = () => {\n\n    const todoList = useSelector((state: StateType) => state.todoList);\n    const search = useSelector((state: StateType) => state.searchTerm);\n    const filter = useSelector((state: StateType) => state.filter);\n\n    const todos = todoList\n        .filter((item) => {\n            return (\n                item.name.toLowerCase().includes(search.toLowerCase())\n                || (\n                    item.description ?\n                        item.description.toLowerCase().includes(search.toLowerCase())\n                        : false\n                )\n            );\n        })\n        .filter((item) => {\n            if (filter === 'done') {\n                return item.done;\n            }\n            else if (filter === 'todo') {\n                return !item.done;\n            } else {\n                return true;\n            }\n        })\n        .map((item: ItemType) => {\n            return (\n                <li key={item.id} >\n                    <TodoListItem item={item} />\n                </li>\n            )\n        });\n\n    return (\n        <ul className={styles.container}>\n            {todos}\n        </ul>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { onFilterAC } from '../../../actions/actions';\nimport { StateType } from '../../../types';\nimport styles from './button-set.module.css';\n\nexport const ButtonSet = () => {\n\n    const filter = useSelector((state: StateType) => state.filter);\n    const dispatch = useDispatch();\n\n    let allClassName = styles.button,\n        todoClassName = styles.button,\n        doneClassName = styles.button\n\n    switch (filter) {\n        case 'all':\n            allClassName += ` ${styles.pressed}`;\n            todoClassName = doneClassName = styles.button;\n            break;\n        case 'todo':\n            todoClassName += ` ${styles.pressed}`;\n            allClassName = doneClassName = styles.button;\n            break;\n        case 'done':\n            doneClassName += ` ${styles.pressed}`;\n            allClassName = todoClassName = styles.button;\n            break;\n        default:\n            allClassName += ` ${styles.pressed}`;\n            todoClassName = doneClassName = styles.button;\n            break;\n    }\n\n    const onClickAll = () => {\n\n        dispatch(onFilterAC('all'));\n    };\n\n    const onClickToDo = () => {\n        dispatch(onFilterAC('todo'));\n    };\n\n    const onClickDone = () => {\n        dispatch(onFilterAC('done'));\n    };\n\n    return (\n        <div className={styles.container} >\n            <div\n                className={allClassName}\n                onClick={onClickAll} >\n                all\n            </div>\n            <div\n                className={todoClassName}\n                onClick={onClickToDo} >\n                to do\n            </div>\n            <div\n                className={doneClassName}\n                onClick={onClickDone} >\n                done\n            </div>\n        </div>\n    )\n}","import { ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onSearchAC, onToggleAllAC } from '../../actions/actions';\nimport { ButtonSet } from './button-set/button-set';\nimport styles from './tools.module.css';\n\nexport const Tools = () => {\n\n    const dispatch = useDispatch();\n\n    const onToggleAll = () => {\n        dispatch(onToggleAllAC());\n    };\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(onSearchAC(e.target.value));\n    };\n\n    return (\n        <div className={styles.container} >\n            <button\n                className={styles.button}\n                onClick={onToggleAll} >\n                toggle all\n            </button>\n            <input\n                className={styles.search}\n                placeholder='Search'\n                onChange={onChange} />\n            <ButtonSet />\n        </div>\n    );\n};","import { AppHeader } from \"../app-header/app.header\";\nimport { AddTodo } from \"../add-todo/add-todo\";\nimport { TodoList } from \"../todo-list/todo-list\";\nimport { Tools } from \"../tools/tools\";\nimport { useSelector } from \"react-redux\";\nimport { StateType } from \"../../types\";\nimport styles from './app.module.css';\n\nexport const App = () => {\n\n    const todoList = useSelector((state: StateType) => state.todoList);\n\n    const tools = todoList.length > 0 ? <Tools /> : null;\n\n    return (\n        <div className={styles.container}>\n            <AppHeader />\n            <AddTodo />\n            {tools}\n            <TodoList />\n        </div>\n    )\n};","import { ItemType, StateType, ActionTypes } from \"./types\";\n\nconst initialState = {\n    filter: 'all',\n    todoList: [\n        {\n            id: 0,\n            name: 'test',\n            description: 'more information',\n            done: false\n        }\n    ],\n    searchTerm: '',\n    id: 1\n}\n\nexport const reducer = (state: StateType | undefined = initialState, action: ActionTypes): StateType => {\n\n    switch (action.type) {\n        case 'ON_DELETE':\n            return onDelete(action.id, state);\n        case 'ON_ADD':\n            return onAdd(action.id, action.name, action.description, state);\n        case 'ON_CHANGE':\n            return onToggle(action.id, state);\n        case 'ON_TOGGLE':\n            return onToggleAll(state);\n        case 'ON_SEARCH':\n            return onSearch(action.search, state);\n        case 'ON_FILTER':\n            return onFilter(action.filter, state);\n        default:\n            return state;\n    }\n};\n\n\nconst onAdd = (id: number, name: string, description: string | undefined, state: StateType) => {\n\n    const { todoList } = state;\n\n    const newId = ++state.id;\n\n    const newItem: ItemType = {\n        id: id,\n        name: name,\n        description: description ? description : undefined,\n        done: false\n    };\n\n    const newTodoList = [\n        newItem,\n        ...todoList\n    ];\n\n    return {\n        ...state,\n        todoList: newTodoList,\n        id: newId\n    }\n};\n\nconst onDelete = (id: number, state: StateType) => {\n\n    const { todoList } = state;\n\n    const newId = ++state.id;\n\n    const idx = todoList.findIndex((item: ItemType) => {\n        return item.id === id;\n    });\n\n    const newTodoList = [\n        ...todoList.slice(0, idx),\n        ...todoList.slice(idx + 1)\n    ];\n\n    return {\n        ...state,\n        todoList: newTodoList,\n        id: newId\n    }\n};\n\nconst onToggle = (id: number, state: StateType) => {\n\n    const { todoList } = state;\n\n    const idx = todoList.findIndex((item: ItemType) => {\n        return item.id === id;\n    });\n\n    const { done } = todoList[idx];\n\n    const newTodoListItem: ItemType = {\n        ...todoList[idx],\n        done: !done\n    };\n\n    const newTodoList = [\n        ...todoList.slice(0, idx),\n        newTodoListItem,\n        ...todoList.slice(idx + 1)\n    ];\n\n    return {\n        ...state,\n        todoList: newTodoList,\n        id: state.id\n    }\n};\n\nconst onToggleAll = (state: StateType) => {\n\n    const { todoList } = state;\n\n    let toggle = false;\n    let newTodoList;\n    todoList.map((item: ItemType) => {\n        if (item.done === false) toggle = true;\n        return true;\n    })\n\n    if (toggle) {\n        newTodoList = todoList.map((item: ItemType) => {\n            return {\n                ...item,\n                done: true\n            }\n        });\n    } else {\n        newTodoList = todoList.map((item: ItemType) => {\n            return {\n                ...item,\n                done: false\n            }\n        });\n    }\n\n    return {\n        ...state,\n        todoList: newTodoList,\n        id: state.id\n    };\n};\n\nconst onSearch = (search: string, state: StateType) => {\n    return {\n        ...state,\n        searchTerm: search\n    };\n};\n\nconst onFilter = (filter: string, state: StateType) => {\n    return {\n        ...state,\n        filter: filter\n    };\n};","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nconst persistedState = localStorage.getItem('todoState')\n    ? JSON.parse(localStorage.getItem('todoState') || '')\n    : undefined;\n\nexport const store = createStore(reducer, persistedState);\n\nstore.subscribe(() => {\n    localStorage.setItem('todoState', JSON.stringify(store.getState()))\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { store } from './stote';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-set_button__19FPV\",\"pressed\":\"button-set_pressed__KVP6b\",\"container\":\"button-set_container__3bfaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todo-list-item_container__hN30F\",\"content\":\"todo-list-item_content__1ix0t\",\"text\":\"todo-list-item_text__3vpwV\",\"done\":\"todo-list-item_done__13Rfh\",\"checkbox\":\"todo-list-item_checkbox__2oiIV\",\"delete\":\"todo-list-item_delete__3N7Gm\",\"edit\":\"todo-list-item_edit__392-L\",\"button\":\"todo-list-item_button__27JvV\",\"description\":\"todo-list-item_description__1OOBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"add-todo_container__3u-XQ\",\"button\":\"add-todo_button__1bAjt\",\"todo\":\"add-todo_todo__3Ny7G\",\"description\":\"add-todo_description__1zmfi\"};"],"sourceRoot":""}